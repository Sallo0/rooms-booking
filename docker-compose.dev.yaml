version: '3.8'

name: booking

services:

  database:
    container_name: database
    image: postgres:14.2-alpine
    env_file:
      - .docker.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    volumes:
      - booking_data:/var/lib/postgresql/data

  server:
    image: booking-image
    build: .
    env_file:
      - .docker.env
    command: make migrate upserver
    ports:
      - 8000
    volumes:
      - .:/usr/src/booking
    depends_on:
      - redis
      - database
    deploy:
      replicas: 2
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 3
#        window: 120s
#      update_config:
#        parallelism: 2
#        delay: 10s
#        order: start-first
#      resources:
#        limits:
#          cpus: '0.50'
#          memory: 512M
#        reservations:
#          cpus: '0.25'
#          memory: 256M

  nginx:
    container_name: nginx
    image: nginx-image
    build: ./nginx
    ports:
      - "127.0.0.1:9000:80"
    volumes:
      - ./app/static:/usr/src/app/static
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - server

  redis:
    container_name: redis
    image: redis-image
    build: ./redis
    expose:
      - 6379

  celery:
    container_name: celery
    image: booking-image
    build: .
    env_file:
      - .docker.env
    command: make upcelery
    volumes:
      - ./app/static:/usr/src/app/static
    depends_on:
      - redis

volumes:
  booking_data:
    external: true

